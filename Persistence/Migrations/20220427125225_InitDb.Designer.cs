// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistence.Contexts;

#nullable disable

namespace Persistence.Migrations
{
    [DbContext(typeof(ScheduleDbContext))]
    [Migration("20220427125225_InitDb")]
    partial class InitDb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Domain.Entities.DailySchedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("LastModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("DailySchedules");
                });

            modelBuilder.Entity("Domain.Entities.Goal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<int>("DateCategory")
                        .HasColumnType("int");

                    b.Property<int>("GoalStatus")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Goals");
                });

            modelBuilder.Entity("Domain.Entities.Note", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ForTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Note");
                });

            modelBuilder.Entity("Domain.Entities.Rule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Rules");
                });

            modelBuilder.Entity("Domain.Entities.RuleDivorce", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescriptReasons")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HowSolveItForNextTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RuleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RuleId");

                    b.ToTable("RuleDivorces");
                });

            modelBuilder.Entity("Domain.Entities.ScheduleTask", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("DailyScheduleId")
                        .HasColumnType("int");

                    b.Property<int>("Index")
                        .HasColumnType("int");

                    b.Property<int>("IsDone")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("NeededTimeToDo")
                        .HasColumnType("time");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TimeDone")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<int?>("WeeklyScheduleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DailyScheduleId");

                    b.HasIndex("UserId");

                    b.HasIndex("WeeklyScheduleId");

                    b.ToTable("ScheduleTasks");
                });

            modelBuilder.Entity("Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Domain.Entities.WeeklySchedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("WeeklySchedules");
                });

            modelBuilder.Entity("Domain.Entities.DailySchedule", b =>
                {
                    b.HasOne("Domain.Entities.User", "User")
                        .WithMany("DailySchedules")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.Goal", b =>
                {
                    b.HasOne("Domain.Entities.User", "User")
                        .WithMany("Goals")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.Note", b =>
                {
                    b.HasOne("Domain.Entities.User", "User")
                        .WithMany("Notes")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.Rule", b =>
                {
                    b.HasOne("Domain.Entities.User", "User")
                        .WithMany("Rules")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.RuleDivorce", b =>
                {
                    b.HasOne("Domain.Entities.Rule", "Rule")
                        .WithMany("RuleDivorces")
                        .HasForeignKey("RuleId");

                    b.Navigation("Rule");
                });

            modelBuilder.Entity("Domain.Entities.ScheduleTask", b =>
                {
                    b.HasOne("Domain.Entities.DailySchedule", "DailySchedule")
                        .WithMany("ScheduleTasks")
                        .HasForeignKey("DailyScheduleId");

                    b.HasOne("Domain.Entities.User", "User")
                        .WithMany("ScheduleTasks")
                        .HasForeignKey("UserId");

                    b.HasOne("Domain.Entities.WeeklySchedule", "WeeklySchedule")
                        .WithMany("ScheduleTasks")
                        .HasForeignKey("WeeklyScheduleId");

                    b.Navigation("DailySchedule");

                    b.Navigation("User");

                    b.Navigation("WeeklySchedule");
                });

            modelBuilder.Entity("Domain.Entities.WeeklySchedule", b =>
                {
                    b.HasOne("Domain.Entities.User", "User")
                        .WithMany("WeeklySchedules")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.DailySchedule", b =>
                {
                    b.Navigation("ScheduleTasks");
                });

            modelBuilder.Entity("Domain.Entities.Rule", b =>
                {
                    b.Navigation("RuleDivorces");
                });

            modelBuilder.Entity("Domain.Entities.User", b =>
                {
                    b.Navigation("DailySchedules");

                    b.Navigation("Goals");

                    b.Navigation("Notes");

                    b.Navigation("Rules");

                    b.Navigation("ScheduleTasks");

                    b.Navigation("WeeklySchedules");
                });

            modelBuilder.Entity("Domain.Entities.WeeklySchedule", b =>
                {
                    b.Navigation("ScheduleTasks");
                });
#pragma warning restore 612, 618
        }
    }
}
