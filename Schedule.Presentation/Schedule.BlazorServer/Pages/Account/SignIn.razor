@page "/SignIn"

@inject ILocalStorageService localStorage
@inject IAccountService accountService

<div class="d-flex justify-content-center">
    <EditForm Model="@signInViewModel" OnValidSubmit="@SignIntoApp">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <div class="alert alert-danger@(showExistsUserError ? "d-none" : "")">
            شما قبلا ثبت نام کرده اید!!!
        </div>

        <b>نام کاربری:</b>
        <InputText @bind-Value="signInViewModel.UserName" />

        <hr>

        <b>رمز عبور:</b>
        <InputText @bind-Value="signInViewModel.Password" />

        <hr>

        <b>تکرار رمز عبور:</b>
        <InputText @bind-Value="signInViewModel.RePassword" />

        <button type="submit" class="btn btn-success">ثبت نام</button>
    </EditForm>
    <hr>
    <a href="/LogIn" class="btn btn-primary">ورود</a>
</div>

@code {
    SignInViewModel signInViewModel = new();
    bool showExistsUserError = false;

    async Task SignIntoApp()
    {
        if (await accountService.IsUserExistsByUserName(signInViewModel.UserName))
        {
            await accountService.RegisterAccount(signInViewModel);
            await localStorage.SetItemAsync<string>("userName", signInViewModel.UserName);
        }
        else
        {
            showExistsUserError = true;
        }
    }
}