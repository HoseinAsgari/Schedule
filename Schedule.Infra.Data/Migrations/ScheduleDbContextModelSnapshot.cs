// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Schedule.Infra.Data.Contexts;

namespace Schedule.Infra.Data.Migrations
{
    [DbContext(typeof(ScheduleDbContext))]
    partial class ScheduleDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Schedule.Domain.Models.DefaultSchedule", b =>
                {
                    b.Property<int>("DefaultScheduleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("DefaultScheduleId");

                    b.HasIndex("UserId");

                    b.ToTable("DefaultSchedule");
                });

            modelBuilder.Entity("Schedule.Domain.Models.ScheduleTask", b =>
                {
                    b.Property<int>("ScheduleTaskId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DefaultScheduleId")
                        .HasColumnType("int");

                    b.Property<int>("IndexOfPartDay")
                        .HasColumnType("int");

                    b.Property<string>("ScheduleTaskText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TaskDone")
                        .HasColumnType("bit");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ScheduleTaskId");

                    b.HasIndex("DefaultScheduleId");

                    b.HasIndex("UserId");

                    b.ToTable("ScheduleTask");
                });

            modelBuilder.Entity("Schedule.Domain.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserPassword")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Schedule.Domain.Models.UserGoals", b =>
                {
                    b.Property<int>("GoalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("GoalText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDone")
                        .HasColumnType("bit");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("GoalId");

                    b.HasIndex("UserId");

                    b.ToTable("UserGoals");
                });

            modelBuilder.Entity("Schedule.Domain.Models.UserRules", b =>
                {
                    b.Property<int>("UserRuleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("UserRuleText")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserRuleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRules");
                });

            modelBuilder.Entity("Schedule.Domain.Models.DefaultSchedule", b =>
                {
                    b.HasOne("Schedule.Domain.Models.User", "User")
                        .WithMany("DefaultSchedules")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Schedule.Domain.Models.ScheduleTask", b =>
                {
                    b.HasOne("Schedule.Domain.Models.DefaultSchedule", "DefaultSchedule")
                        .WithMany("ScheduleTasks")
                        .HasForeignKey("DefaultScheduleId");

                    b.HasOne("Schedule.Domain.Models.User", "User")
                        .WithMany("ScheduleTasks")
                        .HasForeignKey("UserId");

                    b.Navigation("DefaultSchedule");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Schedule.Domain.Models.UserGoals", b =>
                {
                    b.HasOne("Schedule.Domain.Models.User", "User")
                        .WithMany("UserGoals")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Schedule.Domain.Models.UserRules", b =>
                {
                    b.HasOne("Schedule.Domain.Models.User", "User")
                        .WithMany("UserRules")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Schedule.Domain.Models.DefaultSchedule", b =>
                {
                    b.Navigation("ScheduleTasks");
                });

            modelBuilder.Entity("Schedule.Domain.Models.User", b =>
                {
                    b.Navigation("DefaultSchedules");

                    b.Navigation("ScheduleTasks");

                    b.Navigation("UserGoals");

                    b.Navigation("UserRules");
                });
#pragma warning restore 612, 618
        }
    }
}
