@page "/SignIn"

@inject ILocalStorageService LocalStorageService
@inject IAccountService AccountService
@inject NavigationManager NavigationManager

<div class="d-flex justify-content-center mt-5">
    <EditForm Model="@_signInViewModel" OnValidSubmit="@SignIntoApp">
        <h3 class="text-center">ثبت نام</h3>
        <hr/>
        <DataAnnotationsValidator/>
        <ValidationSummary/>
        @if(_showExistsUserError)
        {
            <div class="alert alert-danger">
                شما قبلا ثبت نام کرده اید لطفا وارد شوید!!!
            </div>
        }
        
        <ul>
            <ol class="text-center">
                <b class="m-3">نام کاربری:</b>
                <InputText class="m-3" @bind-Value="_signInViewModel.UserName"/>
            </ol>
            <ol class="text-center">
                <b class="m-3">رمز عبور:</b>
                <InputText type="password" class="m-3" @bind-Value="_signInViewModel.Password"/>
            </ol>
            <ol class="text-center">
                <b class="m-3">تکرار رمز عبور:</b>
                <InputText type="password" class="m-3" @bind-Value="_signInViewModel.RePassword"/>
            </ol>
        </ul>
        <div class="row">
            <div class="col-6 text-center">
                <button type="submit" class="btn btn-success m-2">ثبت نام</button>
            </div>
            <div class="col-6 text-center">
                <a href="/Login" class="btn btn-primary m-2">ورود</a>
            </div>
        </div>
    </EditForm>
</div>

@code {
    private SignInVm _signInViewModel = new();
    private bool _showExistsUserError;

    async Task SignIntoApp()
    {
        var userExist = await AccountService.IsUserExistsByUserName(_signInViewModel.UserName);
        if (userExist is false)
        {
            await AccountService.RegisterAccount(_signInViewModel);
            await LocalStorageService.SetItemAsync("userName", _signInViewModel.UserName);
            NavigationManager.NavigateTo("/");
        }
        else
        {
            _showExistsUserError = true;
        }
    }
}